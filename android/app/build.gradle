plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

//  def keystoreProperties = new Properties()
//    def keystorePropertiesFile = rootProject.file('key.properties')
//    if (keystorePropertiesFile.exists()) {
//        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//    }

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '4'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.3'
}

android {
    compileSdkVersion 34
    namespace "com.ptkcoffee.todaytodo"
    compileSdk flutter.compileSdkVersion
    ndkVersion "28.0.13004108"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // targetSdkVersion 34
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.ptkcoffee.todaytodo"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

     signingConfigs {
       release {
            storeFile file("my-release-key.jks")
            storePassword MYAPP_STORE_PASSWORD
            keyAlias MYAPP_KEY_ALIAS
            keyPassword MYAPP_KEY_PASSWORD
       }
   }
//    buildTypes {
//        release {
//            signingConfig signingConfigs.release
//        }
//    }
    buildTypes {
        release {
            minifyEnabled true  // ✅ 코드 최적화 활성화 (ProGuard 실행)
            shrinkResources true  // ✅ 사용하지 않는 리소스 제거

            // ✅ ProGuard 설정 파일 적용 (없으면 ProGuard 비활성화 상태)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // ✅ 릴리즈 키 설정 (debug 키를 사용하지 않도록 변경)
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
// Import the Firebase BoM
//   implementation platform('com.google.firebase:firebase-bom:33.10.0')


//   // TODO: Add the dependencies for Firebase products you want to use
//   // When using the BoM, don't specify versions in Firebase dependencies
//   implementation 'com.google.firebase:firebase-analytics'


  // Add the dependencies for any other desired Firebase products
  // https://firebase.google.com/docs/android/setup#available-libraries
}
